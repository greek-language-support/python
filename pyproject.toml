# Implementation of a library for handling Greek texts

# Copyright (C) 2025 Alexios Zavras
# SPDX-License-Identifier: LGPL-2.1-or-later

[project]
name = "greek"
version = "0.1.0"
description = "Python code for handling Greek language"
readme = "README.md"
authors = [
    { name = "Alexios Zavras (zvr)", email = "github@zvr.gr" }
]
requires-python = ">=3.13"
dependencies = []

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
    "ruff>=0.9.2",
    "pytest>=8.3.4",
]

[tool.pytest.ini_options]
addopts = "-rA -V"
minversion = "8.3"
pythonpath = ["src"]
testpaths = [
    "tests",
]

[tool.ruff]
fix = false
indent-width = 4
line-length = 120
output-format = "full"
# output-format = "grouped"
preview = true
required-version = ">=0.9"
show-fixes = true

[tool.ruff.format]
docstring-code-format = false
indent-style = "space"
line-ending = "native"
preview = true
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
allowed-confusables = [
"Α", "Β", "Ε", "Ζ", "Η", "Ι", "Κ", "Μ", "Ν", "Ο", "Ρ", "Τ", "Υ", "Χ",
"α", "γ", "ι", "ν", "ο", "ρ", "σ", "υ",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [ "COM812", ]
logger-objects = ["logger"]
preview = true
# anything but "AIR", "ANN", "D", "NPY", "PD",
select = [
"A", "ARG", "ASYNC", "ASYNC1", "B", "BLE", "C", "C4", "C90", "COM", "CPY",
"DJ", "DOC", "DTZ", "E", "EM", "ERA", "EXE", "F", "FA", "FAST", "FBT", "FIX",
"FLY", "FURB", "G", "I", "ICN", "INP", "INT", "ISC", "LOG", "N", "PERF",
"PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "R", "RET", "RSE", "RUF", "S",
"SIM", "SLF", "SLOT", "T10", "T20", "TC", "TD", "TID", "TRY", "UP", "W", "YTT",
]
unfixable = []

[tool.ruff.lint.isort]
case-sensitive = true
force-sort-within-sections = false
from-first = false
lines-between-types = 0
split-on-trailing-comma = false

[tool.ruff.lint.pylint]
max-branches = 10
max-statements = 40

[tool.ruff.lint.per-file-ignores]

"tests/**.py" = ["S101"]	# assert() allowed in tests

